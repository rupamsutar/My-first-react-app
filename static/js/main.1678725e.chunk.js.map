{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","onCancel","preventDefault","ExpenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpenseFilter","selectedYear","onFilterChange","ExpenseDate","month","toLocaleString","day","year","ExpenseItem","ExpensesList","items","length","map","x","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","datapoints","datapoint","totalMaximum","ExpenseChart","chartDataPoints","expenses","expense","getMonth","Expenses","filteredYear","setFilteredYear","expensesList","filter","dateChange","App","Dummy_expenses","setExpense","prevExpense","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1678725e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n    };\r\n    const[enteredAmount, setEnteredAmount] = useState(\"\");\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n    }\r\n\r\n    const [enteredDate, setEnteredDate] = useState(\"\");\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n    }\r\n\r\n\r\n    const submitHandler = (event) => {\r\n\r\n        props.onCancel();\r\n\r\n        event.preventDefault();\r\n\r\n        const ExpenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        }\r\n\r\n        props.onSaveExpenseData(ExpenseData);\r\n        \r\n        setEnteredAmount(\"\");\r\n        setEnteredTitle(\"\");\r\n        setEnteredDate(\"\");\r\n    };\r\n\r\n    return <form onSubmit={submitHandler}>\r\n        <div className = \"new-expense__controls\">\r\n            <div className = \"new-expense__control\">\r\n                <label>Title</label>\r\n                <input type=\"text\" value={enteredTitle} onChange = {titleChangeHandler}/>\r\n            </div>\r\n            <div className = \"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange = {amountChangeHandler} />\r\n            </div>\r\n            <div className = \"new-expense__control\">\r\n                <label>Date</label>\r\n                <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler} />\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"submit\" onClick={props.onCancel}>Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default ExpenseForm;","import React, { useState } from \"react\"; \r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const editingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const ExpenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        }\r\n\r\n        props.onAddExpense(ExpenseData);\r\n    };\r\n\r\n    const submittingCancelHandler = () => {\r\n        setIsEditing(false);\r\n    }\r\n\r\n\r\n    return <div className=\"new-expense\">\r\n        {!isEditing && <button onClick={editingHandler} >Add New Expense</button>}\r\n        {isEditing \r\n            && \r\n                <ExpenseForm \r\n                    onSaveExpenseData={saveExpenseDataHandler} \r\n                    onCancel={submittingCancelHandler} \r\n                />\r\n        }\r\n    </div>\r\n\r\n}\r\n\r\nexport default NewExpense;","import \"./Card.css\"; \r\n\r\n\r\nfunction Card(props) {\r\n    const classes = \"card \" + props.className ;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import React from \"react\"; \r\nimport \"./ExpenseFilter.css\";\r\n\r\nfunction ExpenseFilter(props) {\r\n\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onFilterChange(event.target.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='expenses-filter'>\r\n          <div className='expenses-filter__control'>\r\n            <label>Filter by year</label>\r\n            <select value={props.selectedYear} onChange={dropdownChangeHandler}>\r\n              <option value='2022'>2022</option>\r\n              <option value='2021'>2021</option>\r\n              <option value='2020'>2020</option>\r\n              <option value='2019'>2019</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default ExpenseFilter;","import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate (props) {\r\n    const month = props.date.toLocaleString(\"en-US\", {month : \"long\"});\r\n    const day= props.date.toLocaleString(\"en-US\", {day : \"2-digit\"});\r\n    const year = props.date.toLocaleString(\"en-US\", {year: \"numeric\"});\r\n\r\n    return <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div className=\"expense-date__year\">{year}</div>\r\n        <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n}\r\n\r\nexport default ExpenseDate;","import React from \"react\";\r\nimport \"./ExpenseItem.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\n\r\nfunction ExpenseItem(props) {    \r\n     \r\n\r\n    return  <Card className=\"expense-item\">                \r\n                <ExpenseDate date = {props.date} />\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">{props.amount} /-</div>\r\n                </div>               \r\n            </Card>\r\n}\r\n\r\nexport default ExpenseItem;","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\n\r\nconst ExpensesList = props => {\r\n    if (props.items.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">No Expense Found</h2>\r\n    } \r\n        \r\n    return <ul className=\"expenses-list\">\r\n        {props.items.map(x => \r\n            <ExpenseItem\r\n                key={x.id}\r\n                title={x.title}\r\n                amount={x.amount}\r\n                date={x.date} \r\n                />\r\n            )}\r\n    </ul>\r\n}\r\n\r\nexport default ExpensesList;","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\n\r\nconst ChartBar = (props) => {\r\n     \r\n    let barFillHeight = \"0%\";\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n    }\r\n\r\n    return <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n            </div>        \r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n};\r\n\r\nexport default ChartBar;","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.datapoints.map(datapoint => datapoint.value);\r\n\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n\r\n    return <div className=\"chart\">\r\n        {props.datapoints.map(datapoints => {\r\n            return(\r\n            <ChartBar \r\n                key={datapoints.label}\r\n                value={datapoints.value}\r\n                label={datapoints.label}\r\n                maxValue={totalMaximum}\r\n            />\r\n            )\r\n        })}\r\n    </div>\r\n};\r\n\r\nexport default Chart;","import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpenseChart = (props) => {\r\n    const chartDataPoints = [\r\n        {label: \"Jan\", value: 0},\r\n        {label: \"Feb\", value: 0},\r\n        {label: \"Mar\", value: 0},\r\n        {label: \"Apr\", value: 0},\r\n        {label: \"May\", value: 0},\r\n        {label: \"Jun\", value: 0},\r\n        {label: \"Jul\", value: 0},\r\n        {label: \"Aug\", value: 0},\r\n        {label: \"Sep\", value: 0},\r\n        {label: \"Oct\", value: 0},\r\n        {label: \"Nov\", value: 0},\r\n        {label: \"Dec\", value: 0}\r\n    ];\r\n\r\n\r\n    for (const expense of props.expenses) {\r\n        \r\n        const expenseMonth = expense.date.getMonth();\r\n        // const expenseMonth = expense.date.toLocaleString(\"en-US\", {month : \"long\"});\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart datapoints = {chartDataPoints} />;\r\n};\r\n\r\nexport default ExpenseChart;","import React, { useState } from \"react\"\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpenseChart from \"./ExpenseChart\";\r\n\r\nfunction Expenses(props) {\r\n\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const expensesList = props.items.filter(x => x.date.toLocaleString(\"en-US\", {year: \"numeric\"}) === filteredYear.toString());\r\n  \r\n  const filterChangeHandler = (dateChange) => {\r\n    setFilteredYear(dateChange);\r\n    // setToFilterYear(props.items.filter(x => x.date.toLocaleString(\"en-US\", {year: \"numeric\"}) === dateChange.toString()))\r\n  };\r\n\r\n  return <Card className=\"expenses\">\r\n      <ExpenseFilter selectedYear={filteredYear} onFilterChange={filterChangeHandler} />\r\n      <ExpenseChart expenses={expensesList} />\r\n      <ExpensesList items={expensesList} />\r\n      \r\n{/*       \r\n      <ExpenseItem \r\n      title={props.items[0].title} \r\n      amount={props.items[0].amount} \r\n      date={props.items[0].date}\r\n      />        \r\n      \r\n      <ExpenseItem\r\n        title={props.items[1].title} \r\n        amount={props.items[1].amount} \r\n        date={props.items[1].date}\r\n      />        \r\n      \r\n      <ExpenseItem\r\n        title={props.items[2].title} \r\n        amount={props.items[2].amount} \r\n        date={props.items[2].date}\r\n      />\r\n      \r\n      <ExpenseItem\r\n        title={props.items[3].title} \r\n        amount={props.items[3].amount} \r\n        date={props.items[3].date}\r\n      />        \r\n       */}\r\n  </Card>\r\n}\r\n\r\nexport default Expenses;","import React, { useState } from \"react\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\n\r\nfunction App() {\r\n\r\n  const Dummy_expenses = [\r\n\r\n    {\r\n      id: 'e1',\r\n      title: 'Toilet Paper',\r\n      amount: 94.12,\r\n      date: new Date(2020, 7, 14),\r\n    },\r\n    { id: 'e2', \r\n      title: 'New TV', \r\n      amount: 799.49, \r\n      date: new Date(2021, 2, 12) },\r\n    {\r\n      id: 'e3',\r\n      title: 'Car Insurance',\r\n      amount: 294.67,\r\n      date: new Date(2021, 2, 28),\r\n    },\r\n    {\r\n      id: 'e4',\r\n      title: 'New Desk (Wooden)',\r\n      amount: 450,\r\n      date: new Date(2021, 5, 12),\r\n    }\r\n  ];\r\n\r\n  const [expenses, setExpense] = useState(Dummy_expenses);\r\n    \r\n\r\n  const addExpenseHandler = (expense) => { \r\n    setExpense((prevExpense) => {   \r\n      return ([expense, ...prevExpense])\r\n    });    \r\n  }\r\n\r\n  return <div>\r\n      <NewExpense onAddExpense={addExpenseHandler}  />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n\r\n  // return React.createElement(\r\n  //   \"div\", \r\n  //   {},    \r\n  //   React.createElement(NewExpense, {onAddExpense: addExpenseHandler}),\r\n  //   React.createElement(Expenses, {items : expenses},)       \r\n  //   );          \r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom/client';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}